= render :layout => 'layouts/application' do
  #main
    #whats-happening
      = render 'shared/zones'
      = updated_content_or("#syndicate") do
        #syndicate
          %h3= link_to t("syndicate.posts.title"), :posts, 'data-remote' => true
          = render 'shared/items', :items => posts

          %h3= link_to t("syndicate.events.title"), :events, 'data-remote' => true
          = render 'shared/items', :items => events

          %h3= link_to t("syndicate.announcements.title"), :announcements, 'data-remote' => true
          = render 'shared/items', :items => announcements

    = updated_content_or("#say-something") do
      #say-something
        %h2= t "posts.new.title"
        .wrap
          = render 'shared/say_something_nav', :current => :post
          = render 'posts/form', :post => Post.new
    #community-profiles
      = updated_content_or "#information" do 
        = render 'accounts/info_box'
:javascript
  $("#syndicate form.new_reply").submit(function(e) {
    e.preventDefault();
    var that = this;
    $.post($(that).attr("action"), $(that).serialize(), 
      function(response) {
        if (response) {
       var $replies = $(that).closest("div.replies");
       $replies.replaceWith($(window.innerShiv(response,false)).filter("#" + $replies.attr('id')));
      }
    });
  });

  $("#syndicate .replies a.all-replies").click(function(e) {
    e.preventDefault();
    $(this).hide();
    $(this).siblings("ul").children("li").show();
  });

  $("#syndicate .item a.show-reply-form").click(function(e) {
    e.preventDefault();
    $(this).hide();
  $(this).parent().siblings("div.replies").show();
  });

  $(function() {
  CommonPlace.community = new CommonPlace.Community({ id: #{current_community.id} });

  CommonPlace.community.users.refresh(#{Serializer::serialize(User.where(:community_id => current_community.id).to_a).to_json.html_safe});

  CommonPlace.community.posts.refresh(#{Serializer::serialize(Post.where(:community_id => current_community.id).limit(40).order("created_at DESC").includes(:user, :replies => :user).to_a).to_json.html_safe});

  CommonPlace.community.events.refresh(#{Serializer::serialize(Event.where(:community_id => current_community.id).upcoming.includes(:owner, :replies => :user).to_a).to_json.html_safe});

  CommonPlace.community.announcements.refresh(#{Serializer::serialize(Announcement.where(:community_id => current_community.id).includes(:owner, :replies => :user).to_a).to_json.html_safe});

  CommonPlace.community.group_posts.refresh(#{Serializer::serialize(GroupPost.includes(:group, :user, :replies => :user).where(:groups  => {:community_id => current_community.id}).to_a).to_json.html_safe});

  CommonPlace.community.feeds.refresh(#{Serializer::serialize(Feed.where(:community_id => current_community.id).to_a).to_json.html_safe});

  CommonPlace.community.groups.refresh(#{Serializer::serialize(Group.where(:community_id => current_community.id).to_a).to_json.html_safe});
  
  CommonPlace.account = new CommonPlace.Account(#{Serializer::serialize(Account.new(current_user)).to_json.html_safe});



  CommonPlace.app = new CommonPlace.MainPage({community: CommonPlace.community, account: CommonPlace.account, el: $("#main")});

  Backbone.history.start();
  });
