%script{:src => "http://maps.google.com/maps?file=api&amp;v=2&amp;key=#{google_api_key()}", :type => "text/javascript"}
:javascript
  var map;
  var greenMarkerOptions, redMarkerOptions, orangeMarkerOptions, blueMarkerOptions;
  var droppedMarkers = Array();
  var knockedMarkers = Array();
  var postKnockedMarkers = Array();
  var noMarkers = Array();
  var onMarkers = Array();
  function createMarker(point, html, colorOptions) {

        var marker = new GMarker(point, colorOptions);
        GEvent.addListener(marker, "click", function() {
          marker.openInfoWindowHtml(html);
        });
        return marker;
      }
  function initialize() {
    if (GBrowserIsCompatible()) {
      map = new GMap2(document.getElementById("map_canvas"));
      map.enableContinuousZoom();
      map.enableGoogleBar();
      map.enableScrollWheelZoom();
      map.enablePinchToZoom();
      control = new GLargeMapControl()
      map.addControl(control, control.getDefaultPosition())
      geocoder = new GClientGeocoder();
      geocoder.getLatLng('#{@center_zip_code}', function(point){ map.setCenter(point, 16); });
      map.setCenter(new GLatLng(37.4419, -122.1419), 1);
      var greenIcon = new GIcon(G_DEFAULT_ICON)
      greenIcon.image = "http://www.google.com/intl/en_us/mapfiles/ms/micons/green-dot.png"
      greenMarkerOptions = { icon: greenIcon };

      var redIcon = new GIcon(G_DEFAULT_ICON);
      redIcon.image = "http://www.google.com/intl/en_us/mapfiles/ms/micons/red-dot.png"
      redMarkerOptions = { icon: redIcon };

      var yellowIcon = new GIcon(G_DEFAULT_ICON);
      yellowIcon.image = "http://www.google.com/intl/en_us/mapfiles/ms/micons/yellow-dot.png";
      yellowMarkerOptions = { icon: yellowIcon };

      var orangeIcon = new GIcon(G_DEFAULT_ICON);
      orangeIcon.image = "http://www.google.com/intl/en_us/mapfiles/ms/micons/orange-dot.png";
      orangeMarkerOptions = { icon: orangeIcon };

      var blueIcon = new GIcon(G_DEFAULT_ICON);
      blueIcon.image = "http://www.google.com/intl/en_us/mapfiles/ms/micons/blue-dot.png";
      blueMarkerOptions = { icon: blueIcon };
    }
    drawPoints();
  }

  function showMarkerSet(markers)
  {
    $.each(markers, function(key, marker){
      map.addOverlay(marker);
    });
  }

  function hideMarkerSet(markers)
  {
    $.each(markers, function(key, marker){
      map.removeOverlay(marker);
    });
  }

  function drawPoints()
  {
    $.ajax({
      url: '/api/communities/#{@community_id}/registration_points',
      dataType: 'json',
      success: function(data) {
        $.each(data, function(key, val) {
          var point = new GLatLng(val['lat'], val['lng']);
          var marker = createMarker(point, val['name'], greenMarkerOptions);
          onMarkers.push(marker);
        });
        showMarkerSet(onMarkers);
      }
    });
    $.ajax({
      url: '/api/communities/#{@community_id}/data_points',
      dataType: 'json',
      success: function(data) {
        $.each(data, function(key, val) {
          var colorOption;
          var collection;
          if (val['status'] == 'dropped') {
            colorOption = yellowMarkerOptions;
            geocoder.getLatLng(val['address'], function(p){ droppedMarkers.push(new GMarker(p, colorOption)); });
          }
          if (val['status'] == 'knocked') {
            colorOption = orangeMarkerOptions;
            geocoder.getLatLng(val['address'], function(p){ knockedMarkers.push(new GMarker(p, colorOption)); });
          }
          if (val['status'] == 'post_knocked_1') {
            colorOption = blueMarkerOptions;
            geocoder.getLatLng(val['address'], function(p){ postKnockedMarkers.push(new GMarker(p, colorOption)); });
          }
          if (val['status'] == 'no') {
            colorOption = redMarkerOptions;
            geocoder.getLatLng(val['address'], function(p){ noMarkers.push(new GMarker(p, colorOption)); });
          }
        });
        showMarkerSet(droppedMarkers);
        showMarkerSet(knockedMarkers);
        showMarkerSet(postKnockedMarkers);
        showMarkerSet(noMarkers);
      }
    });

  }
  $(document).ready(initialize);

%table
  %tr{:height => "300px;"}
    %td#map_canvas{:style => "width: 50%; height: 300px;"}
    %td
      = form_tag "/organizer/add", :method => :post do
        = text_field_tag :number, "", :size => 4, :placeholder => "1-10O"
        = text_field_tag :address, "", :placeholder => "Maple Ave", :size => 30
        = @center_zip_code
        = select_tag :status, options_for_select([["Door-Dropped", 'dropped'], ['Door-Knocked', 'knocked'], ['Post-Knocked Once', 'post_knocked_1'], ['Impossibility', 'no']])
        = submit_tag "Enter"
      %a{:onclick => "showMarkerSet(onMarkers);"} Show People on CommonPlace
      |
      %a{:onclick => "hideMarkerSet(onMarkers);"} Hide People on CommonPlace
      %br
      %a{:onclick => "showMarkerSet(droppedMarkers);"} Show Doordrops
      |
      %a{:onclick => "hideMarkerSet(droppedMarkers);"} Hide Doordrops
      %br
      %a{:onclick => "showMarkerSet(knockedMarkers);"} Show Doorknocks
      |
      %a{:onclick => "hideMarkerSet(knockedMarkers);"} Hide Doorknocks
      %br
      %a{:onclick => "showMarkerSet(postKnockedMarkers);"} Show Post-Knocks
      |
      %a{:onclick => "hideMarkerSet(postKnockedMarkers);"} Hide Post-Knocks
      %br
      %a{:onclick => "showMarkerSet(noMarkers);"} Show Negative Responses
      |
      %a{:onclick => "hideMarkerSet(noMarkers);"} Hide Negative Responses
