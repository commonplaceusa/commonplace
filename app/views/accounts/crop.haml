- if Rails.env.production?
  :javascript
    mpmetrics.track('Cropping Avatar');

:javascript
  var original_width = #{current_user.avatar_geometry(:original).width};
  var original_height = #{current_user.avatar_geometry(:original).height};
  var croppable_width = #{current_user.avatar_geometry(:croppable).width};
  var croppable_height = #{current_user.avatar_geometry(:croppable).height};
  var maxsize = croppable_width > croppable_height ? croppable_height : croppable_width;
  $(function() {
    $('#cropbox').Jcrop({
      onChange: update_crop,
      onSelect: update_crop,
      setSelect: [0, 0, croppable_width, croppable_height],
      aspectRatio: 1.0,
      maxSize: [maxsize, maxsize]
      //boxWidth: 976,
      //boxHeight: 539
    });
  });
  function update_crop(coords) {
    console.log(coords);
    var wratio = original_width / croppable_width;
    var hratio = original_height / croppable_height;
    var ratio = 1;
    $("#crop_x").val(Math.round(coords.x * wratio));
    $("#crop_y").val(Math.round(coords.y * hratio));
    $("#crop_w").val(Math.round(coords.w * wratio));
    $("#crop_h").val(Math.round(coords.h * hratio));
    console.log("New image is " + $("#crop_w").val() + " x " + $("#crop_h").val())
  }
  
%h1
  Please crop your avatar
  = image_tag current_user.avatar.url(:croppable), :id => "cropbox", :align => "center"
  %br
  #preview{:style => "width:100px; height:100px; overflow:hidden"}
    = image_tag current_user.avatar.url(:croppable), :id => "preview"

  -#- form_for current_user do |f|
  = semantic_form_for current_user, :url => update_crop_account_path, :method => :put do |f|
    - f.inputs do
      - for attribute in [:crop_x, :crop_y, :crop_w, :crop_h]
        = f.hidden_field attribute, :id => attribute
    = f.buttons do
      = f.commit_button :button_html => {:type => "image", :src => "/images/buttons/continue.png"}

