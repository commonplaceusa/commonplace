indexer
{
}

searchd
{
  listen = 127.0.0.1:9312
  log = /Users/jasonberlinsky/Documents/Work/2011Summer/CommonPlace/commonplace/log/searchd.log
  query_log = /Users/jasonberlinsky/Documents/Work/2011Summer/CommonPlace/commonplace/log/searchd.query.log
  pid_file = /Users/jasonberlinsky/Documents/Work/2011Summer/CommonPlace/commonplace/log/searchd.development.pid
}

source announcement_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = root
  sql_pass = 
  sql_db = commonplace_development
  sql_query_pre = SET TIME ZONE 'UTC'
  sql_query = SELECT "announcements"."id" * 3::INT8 + 0 AS "id" , "announcements"."subject" AS "subject", "announcements"."body" AS "body", CAST(COALESCE("feeds"."name", '') as varchar) AS "author", "announcements"."id" AS "sphinx_internal_id", 0 AS "sphinx_deleted", CASE COALESCE("announcements"."type", '') WHEN 'RSSAnnouncement' THEN 817571638 WHEN 'Announcement' THEN 1434976996 ELSE 1434976996 END AS "class_crc", COALESCE("announcements"."type", '') AS "sphinx_internal_class", COALESCE("announcements"."subject", '') AS "subject_sort", COALESCE("feeds"."name", '') AS "author_sort", "announcements"."owner_id" AS "owner_id", cast(extract(epoch from "announcements"."created_at") as int) AS "created_at", cast(extract(epoch from "announcements"."updated_at") as int) AS "updated_at" FROM "announcements" LEFT OUTER JOIN "feeds" ON "feeds"."id" = "announcements"."owner_id" AND "announcements"."owner_type" = 'Feed' LEFT OUTER JOIN "users" ON "users"."id" = "announcements"."owner_id" AND "announcements"."owner_type" = 'User' WHERE ("announcements"."id" >= $start AND "announcements"."id" <= $end AND private) GROUP BY "announcements"."id", "announcements"."subject", "announcements"."body", "feeds"."name", "announcements"."id", "announcements"."subject", "feeds"."name", "announcements"."owner_id", "announcements"."created_at", "announcements"."updated_at", "announcements"."type"
  sql_query_range = SELECT COALESCE(MIN("id"), 1::bigint), COALESCE(MAX("id"), 1::bigint) FROM "announcements" 
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = class_crc
  sql_attr_uint = owner_id
  sql_attr_timestamp = created_at
  sql_attr_timestamp = updated_at
  sql_attr_string = sphinx_internal_class
  sql_attr_string = subject_sort
  sql_attr_string = author_sort
  sql_query_info = SELECT * FROM "announcements" WHERE "id" = (($id - 0) / 3)
}

index announcement_core
{
  source = announcement_core_0
  path = /Users/jasonberlinsky/Documents/Work/2011Summer/CommonPlace/commonplace/db/sphinx/development/announcement_core
  charset_type = utf-8
}

index announcement
{
  type = distributed
  local = announcement_core
}

source event_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = root
  sql_pass = 
  sql_db = commonplace_development
  sql_query_pre = SET TIME ZONE 'UTC'
  sql_query = SELECT "events"."id" * 3::INT8 + 1 AS "id" , "events"."name" AS "name", "events"."description" AS "description", "events"."cached_tag_list" AS "cached_tag_list", "events"."address" AS "address", "events"."venue" AS "venue", "events"."host_group_name" AS "host_group_name", CAST(COALESCE("feeds"."name", '') as varchar) AS "host", "events"."id" AS "sphinx_internal_id", 0 AS "sphinx_deleted", 4201588131 AS "class_crc", COALESCE("events"."type", '') AS "sphinx_internal_class", COALESCE("events"."name", '') AS "name_sort", cast(extract(epoch from "events"."created_at") as int) AS "created_at", cast(extract(epoch from "events"."updated_at") as int) AS "updated_at" FROM "events" LEFT OUTER JOIN "feeds" ON "feeds"."id" = "events"."owner_id" AND "events"."owner_type" = 'Feed' LEFT OUTER JOIN "users" ON "users"."id" = "events"."owner_id" AND "events"."owner_type" = 'User' WHERE ("events"."id" >= $start AND "events"."id" <= $end) GROUP BY "events"."id", "events"."name", "events"."description", "events"."cached_tag_list", "events"."address", "events"."venue", "events"."host_group_name", "feeds"."name", "events"."id", "events"."name", "events"."created_at", "events"."updated_at", "events"."type"
  sql_query_range = SELECT COALESCE(MIN("id"), 1::bigint), COALESCE(MAX("id"), 1::bigint) FROM "events" 
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = class_crc
  sql_attr_timestamp = created_at
  sql_attr_timestamp = updated_at
  sql_attr_string = sphinx_internal_class
  sql_attr_string = name_sort
  sql_query_info = SELECT * FROM "events" WHERE "id" = (($id - 1) / 3)
}

index event_core
{
  source = event_core_0
  path = /Users/jasonberlinsky/Documents/Work/2011Summer/CommonPlace/commonplace/db/sphinx/development/event_core
  charset_type = utf-8
}

index event
{
  type = distributed
  local = event_core
}

source post_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = root
  sql_pass = 
  sql_db = commonplace_development
  sql_query_pre = SET TIME ZONE 'UTC'
  sql_query = SELECT "posts"."id" * 3::INT8 + 2 AS "id" , "posts"."subject" AS "subject", "posts"."body" AS "body", "posts"."id" AS "sphinx_internal_id", 0 AS "sphinx_deleted", 4206412723 AS "class_crc", COALESCE('Post', '') AS "sphinx_internal_class", COALESCE("posts"."subject", '') AS "subject_sort", cast(extract(epoch from "posts"."created_at") as int) AS "created_at", cast(extract(epoch from "posts"."updated_at") as int) AS "updated_at" FROM "posts" LEFT OUTER JOIN "users" ON "users"."id" = "posts"."user_id" WHERE ("posts"."id" >= $start AND "posts"."id" <= $end AND published) GROUP BY "posts"."id", "posts"."subject", "posts"."body", , "posts"."id", "posts"."subject", "posts"."created_at", "posts"."updated_at"
  sql_query_range = SELECT COALESCE(MIN("id"), 1::bigint), COALESCE(MAX("id"), 1::bigint) FROM "posts" 
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = class_crc
  sql_attr_timestamp = created_at
  sql_attr_timestamp = updated_at
  sql_attr_string = sphinx_internal_class
  sql_attr_string = subject_sort
  sql_query_info = SELECT * FROM "posts" WHERE "id" = (($id - 2) / 3)
}

index post_core
{
  source = post_core_0
  path = /Users/jasonberlinsky/Documents/Work/2011Summer/CommonPlace/commonplace/db/sphinx/development/post_core
  charset_type = utf-8
}

index post
{
  type = distributed
  local = post_core
}
