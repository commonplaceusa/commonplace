= render :layout => 'layouts/application' do
  #main
    #whats-happening
    #say-something
    #community-profiles
      = render 'accounts/info_box'

:javascript

  CommonPlace.community = new CommonPlace.Community({ id: #{current_community.id},
  name: "#{current_community.name}"});


  CommonPlace.community.users.refresh(#{Serializer::serialize(User.where(:community_id => current_community.id).to_a).to_json.html_safe});

  CommonPlace.community.posts.refresh(#{Serializer::serialize(Post.where(:community_id => current_community.id).limit(40).order("created_at DESC").includes(:user, :replies => :user).to_a).to_json.html_safe});

  CommonPlace.community.events.refresh(#{Serializer::serialize(Event.where(:community_id => current_community.id).upcoming.includes(:owner, :replies => :user).to_a).to_json.html_safe});

  CommonPlace.community.announcements.refresh(#{Serializer::serialize(Announcement.where(:community_id => current_community.id).includes(:owner, :replies => :user).to_a).to_json.html_safe});

  CommonPlace.community.group_posts.refresh(#{Serializer::serialize(GroupPost.includes(:group, :user, :replies => :user).where(:groups  => {:community_id => current_community.id}).to_a).to_json.html_safe});

  CommonPlace.community.feeds.refresh(#{Serializer::serialize(Feed.where(:community_id => current_community.id).to_a).to_json.html_safe});

  CommonPlace.community.groups.refresh(#{Serializer::serialize(Group.where(:community_id => current_community.id).to_a).to_json.html_safe});
  
  CommonPlace.account = new CommonPlace.Account(#{Serializer::serialize(Account.new(current_user)).to_json.html_safe});


  var oldhash = window.location.hash;
  window.location.hash = "/";

  CommonPlace.app = new CommonPlace.MainPage({community: CommonPlace.community, account: CommonPlace.account, el: $("#main")});
  
  Backbone.history.start();
  window.location.hash = oldhash.slice(1);

- unless current_user.seen_tour?
  - current_user.toggle!(:seen_tour)
  :javascript
    (new CommonPlace.Tour({el: $("#main")})).render();
  
  
